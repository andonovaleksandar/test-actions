# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    branches: [ "main" ]
    types: [closed]
jobs:
  build:
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref,'hotfix/') && github.base_ref == 'main' && github.event.pull_request.merged == true
    steps:
    - uses: actions/checkout@v3
    - name: Set Git config
      run: |
        git config --global user.email "tobobot@toborrow.com"
        git config --global user.name "TB CI Bot"
    - name: 'Backmerging staging'
      run: |
        from_branch="main"
        to_branch="staging"
        echo $from_branch
        echo $to_branch
        branchName=temp-branch-"${{ github.run_id }}"-"${{ github.run_attempt }}"
        git fetch --unshallow
        git checkout $to_branch
        git checkout -b $branchName
        git merge -S $from_branch
        git push --set-upstream origin $branchName
    - name: Create Pull Request Staging
      uses: actions/github-script@v6
      env:
        source: master
        target: staging
      with:
        script: |
          const from = 'temp-branch-'+${{ github.run_id }}+'-'+${{ github.run_attempt }}
          const { repo, owner } = context.repo;
          const result = await github.rest.pulls.create({
            title: '[AUTO] Backmerge '+process.env.source+' into '+process.env.target,
            owner,
            repo,
            head: from,
            base: process.env.target,
            body: [
              'This PR is auto-generated by',
              '[actions/github-script](https://github.com/actions/github-script).'
            ].join('\n')
          });
          await github.rest.issues.addLabels({
              issue_number: result.data.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['work done']
            })  
